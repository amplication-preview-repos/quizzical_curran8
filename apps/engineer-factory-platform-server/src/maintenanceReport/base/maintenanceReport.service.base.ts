/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  MaintenanceReport as PrismaMaintenanceReport,
} from "@prisma/client";

export class MaintenanceReportServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.MaintenanceReportCountArgs, "select">
  ): Promise<number> {
    return this.prisma.maintenanceReport.count(args);
  }

  async maintenanceReports(
    args: Prisma.MaintenanceReportFindManyArgs
  ): Promise<PrismaMaintenanceReport[]> {
    return this.prisma.maintenanceReport.findMany(args);
  }
  async maintenanceReport(
    args: Prisma.MaintenanceReportFindUniqueArgs
  ): Promise<PrismaMaintenanceReport | null> {
    return this.prisma.maintenanceReport.findUnique(args);
  }
  async createMaintenanceReport(
    args: Prisma.MaintenanceReportCreateArgs
  ): Promise<PrismaMaintenanceReport> {
    return this.prisma.maintenanceReport.create(args);
  }
  async updateMaintenanceReport(
    args: Prisma.MaintenanceReportUpdateArgs
  ): Promise<PrismaMaintenanceReport> {
    return this.prisma.maintenanceReport.update(args);
  }
  async deleteMaintenanceReport(
    args: Prisma.MaintenanceReportDeleteArgs
  ): Promise<PrismaMaintenanceReport> {
    return this.prisma.maintenanceReport.delete(args);
  }
}
